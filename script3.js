"use strict";

const game = {
  team1: "Bayern Munich",
  team2: "Borrussia Dortmund",
  players: [
    [
      "Neuer",
      "Pavard",
      "Martinez",
      "Alaba",
      "Davies",
      "Kimmich",
      "Goretzka",
      "Coman",
      "Muller",
      "Gnarby",
      "Lewandowski",
    ],
    [
      "Burki",
      "Schulz",
      "Hummels",
      "Akanji",
      "Hakimi",
      "Weigl",
      "Witsel",
      "Hazard",
      "Brandt",
      "Sancho",
      "Gotze",
    ],
  ],
  score: "4:0",
  scored: ["Lewandowski", "Gnarby", "Lewandowski", "Hummels"],
  date: "Nov 9th, 2037",
  odds: {
    team1: 1.33,
    x: 3.25,
    team2: 6.5,
  },
};

// exercice 1, t√¢che 1: Cr√©er un tableau de joueurs pour chaque √©quipe (variables ‚Äòplayers1‚Äô et ‚Äòplayers2‚Äô).

const players1 = game.players[0];
console.log(players1);

const players2 = game.players[1];
console.log(players2);

// exercice 1, t√¢che 2: Le premier joueur dans un tableau de joueurs est le gardien et les autres sont des joueurs de terrain. Pour l‚Äô√©quipe 1 (le Bayern de Munich), cr√©er une variable ‚Äògk‚Äô avec le nom du gardien et un tableau ‚ÄòfieldPlayers‚Äô avec le reste des joueurs de l‚Äô√©quipe.

const gk = game.players[0][0];
console.log(gk);

const fieldPlayers = players1.shift();
console.log(players1);

// exercice 1, t√¢che 3:  Cr√©er un tableau ‚ÄòallPlayers‚Äô qui contient les joueurs de chaque √©quipe (22 joueurs).

const allPlayers = players1.concat(players2);
console.log(allPlayers);

// exercice 1, t√¢che 4: Pendant le match, le Bayern utilise 3 joueurs rempla√ßants. Cr√©er un autre tableau ‚Äòplayers1Final‚Äô contenant tous les joueurs de l‚Äô√©quipe originelle ainsi que ‚ÄòThiago‚Äô ‚ÄòCoutinho‚Äô et ‚ÄòPerisic‚Äô.

const players1Final = [...players1, "Thiago", "Coutinho", "Perisic"];
console.log(players1Final);

// exercice 1, t√¢che 5: Bas√© sur l‚Äôobjet game.odds, cr√©er une variable pour chaque probabilit√© (appel√©s ‚Äòteam1‚Äô, ‚Äòdraw‚Äô et ‚Äòteam2‚Äô).

let team1 = game.odds.team1;
console.log(team1);

let draw = game.odds.x;
console.log(draw);

let team2 = game.odds.team2;
console.log(team2);

// exercice 1, t√¢che 6: √âcrire une fonction ‚ÄòprintGoals‚Äô qui prend un nombre arbitraire de joueurs et qui √©crit chacun d‚Äôeux dans la console , ainsi que le nombre total de buts.

let randomNumberOfPlayers = 10;
let totalScore = 0;

function printGoals() {
  const allPlayersFinal = players1Final.concat(players2);
  // Shuffle array
  const shuffled = allPlayersFinal.sort(() => 0.5 - Math.random());

  // Get sub-array of first n elements after shuffled
  let selected = shuffled.slice(0, randomNumberOfPlayers);

  console.log(selected);

  for (let i = 0; i <= selected.length; i++) {
    if (selected[i] === "Lewandowski") {
      totalScore = totalScore + 2;
      console.log("Lewandowski a marqu√© 2 buts");
    } else if (selected[i] === "Gnarby") {
      totalScore = totalScore + 1;
      console.log("Gnarby a marqu√© 1 but");
    } else if (selected[i] === "Hummels") {
      totalScore = totalScore + 1;
      console.log("hummels a marqu√© 1 but");
    }
  }
  if (totalScore === 1)
    console.log(
      "Au total " +
        totalScore +
        " but a √©t√© marqu√© par l'un des joueurs s√©lectionn√©s au hasard"
    );
  else if (totalScore > 1)
    console.log(
      "Au total " +
        totalScore +
        " buts ont √©t√© marqu√©s par les joueurs s√©lectionn√©s au hasard"
    );
  else {
    console.log("Aucun but marqu√© par les joueurs s√©lectionn√©s au hasard");
  }
}

printGoals();

// exercice 1, t√¢che 7: L‚Äô√©quipe avec la probabilit√© la plus basse est celle la plus susceptible de gagner. √âcrire dans la console quelle √©quipe a le plus de chance de gagner.

function favoriteTeam() {
  if (team1 < team2) {
    console.log(game.team1 + " are the favorite");
  } else if (team1 > team2) {
    console.log(game.team2 + " are the favorite");
  } else {
    console.log("There is no favorite");
  }
}

favoriteTeam();

// exercice 2, t√¢che 1: Faire une boucle sur le tableau game.scored et afficher dans la console chaque nom de butteur ainsi que le num√©ro du but : (Exemple : ‚ÄúBut 1 : Lewanoski‚Äù).

function displayEachScorer() {
  let but = 0;
  for (var i = 0; i < game.scored.length; i++) {
    but += 1;
    console.log(`But ${but} : ${game.scored[i]}`);
  }
}
displayEachScorer();

// exercice 2, t√¢che 2: Faire une boucle qui calcule la moyenne des probabilit√©s et l‚Äô√©crire dans la console.

let arrayOdds = [team1, draw, team2];

let totalOdds = 0;
for (var i = 0; i < arrayOdds.length; i++) {
  totalOdds += arrayOdds[i];
}
var avg = totalOdds / arrayOdds.length;

console.log(avg);

/* exercice 2, t√¢che 3: Afficher les 2 probabilit√©s dans la console, mais dans un joli format comme ceci :
Probabilit√© de victoire pour Bayern Munich : 1,33
Probabilit√© d‚Äô√©galit√© : 3,25
Probabilit√© de victoire de Borussia Dortmund : 6,5
Bien r√©cup√©rer les noms des √©quipes depuis l‚Äôobjet ‚Äògame‚Äô, ne pas les ‚Äúhardcoder‚Äù.
*/

function displayOdds() {
  console.log(`Probabilit√© de victoire pour ${game.team1} : ${team1}`);
  console.log(`Probabilit√© d'√©galit√© : ${draw}`);
  console.log(`Probabilit√© de victoire pour ${game.team2} : ${team2}`);
}

displayOdds();

// exercice 2, t√¢che 4: Cr√©er un objet appel√© ‚Äòscorers‚Äô qui contient le nom des joueurs qui ont marqu√© en propri√©t√© et le nombre de buts qu‚Äôils ont marqu√© en value.

const scorers = {
  Gnarby: 1,
  Hummels: 1,
  Lewandowski: 2,
};

// exercice 3, t√¢che 1: Cr√©er un tableau ‚Äòevents‚Äô des diff√©rents √©v√®nements qui se sont d√©roul√©s (pas de doublon !).

const gameEvents = [
  [17, "‚öΩ GOAL"],
  [36, "üîÅ Substitution"],
  [47, "‚öΩ GOAL"],
  [61, "üîÅ Substitution"],
  [64, "üü® Yellow card"],
  [69, "üü• Red card"],
  [70, "üîÅ Substitution"],
  [72, "üîÅ Substitution"],
  [76, "‚öΩ GOAL"],
  [80, "‚öΩ GOAL"],
  [92, "üü® Yellow card"],
];

const events = ["‚öΩ GOAL", "üîÅ Substitution", "üü® Yellow card"];

// exercice 3, t√¢che 2: Apr√®s que le jeux soit fini, on a d√©cid√© que le carton jaune de la minute 64 n‚Äô√©tait pas juste, Le supprimer du log d‚Äô√©v√®nements.

const gameEventsLessMinute64 = gameEvents.filter(function (gameEvents) {
  return gameEvents[0] != 64;
});

console.log(gameEventsLessMinute64);

// exercice 3, t√¢che 3: Calculer et afficher ce texte dans la console : ‚ÄúUn √©v√®nement est apparu en moyenne toutes les 9 minutes‚Äù. (Un jeu de foot dure 90 minutes).

const gameEventsGetTime = [];

for (var k in gameEventsLessMinute64)
  gameEventsGetTime.push(gameEventsLessMinute64[k][0]);

console.log(gameEventsGetTime);

const averageDelta = ([x, ...xs]) => {
  if (x === undefined) return NaN;
  else
    return (
      xs.reduce(([acc, last], x) => [acc + (x - last), x], [0, x])[0] /
      xs.length
    );
};

console.log(
  " Un √©v√®nement est apparu en moyenne toutes les " +
    Math.ceil(averageDelta(gameEventsGetTime)) +
    " minutes."
);

// exercice 3, t√¢che 4: Faire une boucle sur ‚ÄògameEvents‚Äô et afficher pour chaque √©l√©ment dans la console s‚Äôil s‚Äôest d√©roul√© dans la premi√®re ou deuxi√®me moiti√© du jeu :[PREMI√àRE MOITI√â] 17 . ‚öΩÔ∏è GOAL

for (let i = 0; i < gameEventsGetTime.length; i++) {
  if (gameEventsGetTime[i] < 45) {
    console.log("PREMI√àRE MOITI√â: " + gameEventsLessMinute64[i]);
  } else {
    console.log("DEUXI√àME MOITI√â: " + gameEventsLessMinute64[i]);
  }
}
